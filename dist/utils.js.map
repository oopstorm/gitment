{"version":3,"sources":["../src/utils.js"],"names":["getTargetContainer","isString","toString","call","s","container","targetContainer","Element","document","getElementById","createElement","Query","parse","search","window","location","queryString","substring","query","split","forEach","queryStr","key","value","stringify","prefix","Object","keys","map","encodeURIComponent","join","ajaxFactory","method","apiPath","data","base","req","XMLHttpRequest","token","localStorage","getItem","LS_ACCESS_TOKEN_KEY","url","body","p","Promise","resolve","reject","addEventListener","contentType","getResponseHeader","res","responseText","test","JSON","message","Error","error","open","setRequestHeader","send","http","get","post","delete","put"],"mappings":"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","file":"utils.js","sourcesContent":["import { LS_ACCESS_TOKEN_KEY } from './constants'\r\n\r\nexport const isString = s => toString.call(s) === '[object String]'\r\n\r\nexport function getTargetContainer(container) {\r\n  let targetContainer\r\n  if (container instanceof Element) {\r\n    targetContainer = container\r\n  } else if (isString(container)) {\r\n    targetContainer = document.getElementById(container)\r\n  } else {\r\n    targetContainer = document.createElement('div')\r\n  }\r\n\r\n  return targetContainer\r\n}\r\n\r\nexport const Query = {\r\n  parse(search = window.location.search) {\r\n    if (!search) return {}\r\n    const queryString = search[0] === '?' ? search.substring(1) : search\r\n    const query = {}\r\n    queryString.split('&')\r\n      .forEach(queryStr => {\r\n        const [key, value] = queryStr.split('=')\r\n        if (key) query[key] = value\r\n      })\r\n\r\n    return query\r\n  },\r\n  stringify(query, prefix = '?') {\r\n    const queryString = Object.keys(query)\r\n      .map(key => `${key}=${encodeURIComponent(query[key] || '')}`)\r\n      .join('&')\r\n    return queryString ? prefix + queryString : ''\r\n  },\r\n}\r\n\r\nfunction ajaxFactory(method) {\r\n  return function(apiPath, data = {}, base = 'https://api.github.com') {\r\n    const req = new XMLHttpRequest()\r\n    const token = localStorage.getItem(LS_ACCESS_TOKEN_KEY)\r\n\r\n    let url = `${base}${apiPath}`\r\n    let body = null\r\n    if (method === 'GET' || method === 'DELETE') {\r\n      url += Query.stringify(data)\r\n    }\r\n\r\n    const p = new Promise((resolve, reject) => {\r\n      req.addEventListener('load', () => {\r\n        const contentType = req.getResponseHeader('content-type')\r\n        const res = req.responseText\r\n        if (!/json/.test(contentType)) {\r\n          resolve(res)\r\n          return\r\n        }\r\n        const data = req.responseText ? JSON.parse(res) : {}\r\n        if (data.message) {\r\n          reject(new Error(data.message))\r\n        } else {\r\n          resolve(data)\r\n        }\r\n      })\r\n      req.addEventListener('error', error => reject(error))\r\n    })\r\n    req.open(method, url, true)\r\n\r\n    if (apiPath === \"https://cors-anywhere.herokuapp.com/https://github.com/login/oauth/access_token\") {\r\n      req.setRequestHeader('Accept', 'application/json');\r\n    } else {\r\n      req.setRequestHeader('Accept', 'application/vnd.github.squirrel-girl-preview, application/vnd.github.html+json');\r\n    }\r\n    if (token) {\r\n      req.setRequestHeader('Authorization', `token ${token}`)\r\n    }\r\n    if (method !== 'GET' && method !== 'DELETE') {\r\n      body = JSON.stringify(data)\r\n      req.setRequestHeader('Content-Type', 'application/json')\r\n    }\r\n\r\n    req.send(body)\r\n    return p\r\n  }\r\n}\r\n\r\nexport const http = {\r\n  get: ajaxFactory('GET'),\r\n  post: ajaxFactory('POST'),\r\n  delete: ajaxFactory('DELETE'),\r\n  put: ajaxFactory('PUT'),\r\n}\r\n"]}